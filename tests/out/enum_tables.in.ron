SchemaBlock {
    span_range: 0..460,
    input: "Enum job_status {\n  created [note: 'Job created and pending']\n  running [note: 'Waiting for warehouse to process']\n  done\n  failed\n\t\"wait for validation\" [note: 'Enum label that has white spaces']\n}\n\nTable jobs {\n  id integer [pk]\n  status job_status [note: 'This is a column note']\n}\n\nEnum \"order status\" {\n  created [note: 'Order created']\n  pending\n  processing\n  completed\n}\n\nTable orders {\n  id int PK unique\n  status \"order status\"\n  created_at varchar\n}",
    project: None,
    tables: [
        TableBlock {
            span_range: 0..0,
            cols: [
                TableColumn {
                    span_range: 0..0,
                    name: "id",
                    type: ColumnType {
                        span_range: 0..0,
                        type_name: Raw(
                            "integer",
                        ),
                        args: [],
                        arrays: [],
                    },
                    settings: ColumnSettings {
                        span_range: 0..0,
                        is_pk: true,
                        is_unique: false,
                        is_nullable: false,
                        is_incremental: false,
                        note: None,
                        default: None,
                        refs: [],
                    },
                },
                TableColumn {
                    span_range: 0..0,
                    name: "status",
                    type: ColumnType {
                        span_range: 0..0,
                        type_name: Raw(
                            "job_status",
                        ),
                        args: [],
                        arrays: [],
                    },
                    settings: ColumnSettings {
                        span_range: 0..0,
                        is_pk: false,
                        is_unique: false,
                        is_nullable: false,
                        is_incremental: false,
                        note: Some(
                            "This is a column note",
                        ),
                        default: None,
                        refs: [],
                    },
                },
            ],
            ident: TableIdent {
                span_range: 0..0,
                name: "jobs",
                schema: None,
                alias: None,
            },
            note: None,
            indexes: None,
            settings: None,
            meta_indexer: TableIndexer {
                pk_list: [],
                unique_list: [],
                indexed_list: [],
            },
        },
        TableBlock {
            span_range: 0..0,
            cols: [
                TableColumn {
                    span_range: 0..0,
                    name: "id",
                    type: ColumnType {
                        span_range: 0..0,
                        type_name: Raw(
                            "int",
                        ),
                        args: [],
                        arrays: [],
                    },
                    settings: ColumnSettings {
                        span_range: 0..0,
                        is_pk: false,
                        is_unique: false,
                        is_nullable: false,
                        is_incremental: false,
                        note: None,
                        default: None,
                        refs: [],
                    },
                },
                TableColumn {
                    span_range: 0..0,
                    name: "PK",
                    type: ColumnType {
                        span_range: 0..0,
                        type_name: Raw(
                            "unique",
                        ),
                        args: [],
                        arrays: [],
                    },
                    settings: ColumnSettings {
                        span_range: 0..0,
                        is_pk: false,
                        is_unique: false,
                        is_nullable: false,
                        is_incremental: false,
                        note: None,
                        default: None,
                        refs: [],
                    },
                },
                TableColumn {
                    span_range: 0..0,
                    name: "status",
                    type: ColumnType {
                        span_range: 0..0,
                        type_name: Raw(
                            "order status",
                        ),
                        args: [],
                        arrays: [],
                    },
                    settings: ColumnSettings {
                        span_range: 0..0,
                        is_pk: false,
                        is_unique: false,
                        is_nullable: false,
                        is_incremental: false,
                        note: None,
                        default: None,
                        refs: [],
                    },
                },
                TableColumn {
                    span_range: 0..0,
                    name: "created_at",
                    type: ColumnType {
                        span_range: 0..0,
                        type_name: Raw(
                            "varchar",
                        ),
                        args: [],
                        arrays: [],
                    },
                    settings: ColumnSettings {
                        span_range: 0..0,
                        is_pk: false,
                        is_unique: false,
                        is_nullable: false,
                        is_incremental: false,
                        note: None,
                        default: None,
                        refs: [],
                    },
                },
            ],
            ident: TableIdent {
                span_range: 0..0,
                name: "orders",
                schema: None,
                alias: None,
            },
            note: None,
            indexes: None,
            settings: None,
            meta_indexer: TableIndexer {
                pk_list: [],
                unique_list: [],
                indexed_list: [],
            },
        },
    ],
    table_groups: [],
    refs: [],
    enums: [
        EnumBlock {
            ident: EnumIdent {
                name: "job_status",
                schema: None,
            },
            values: [
                EnumValue {
                    value: "created",
                    note: Some(
                        "Job created and pending",
                    ),
                },
                EnumValue {
                    value: "running",
                    note: Some(
                        "Waiting for warehouse to process",
                    ),
                },
                EnumValue {
                    value: "done",
                    note: None,
                },
                EnumValue {
                    value: "failed",
                    note: None,
                },
                EnumValue {
                    value: "wait for validation",
                    note: Some(
                        "Enum label that has white spaces",
                    ),
                },
            ],
        },
        EnumBlock {
            ident: EnumIdent {
                name: "order status",
                schema: None,
            },
            values: [
                EnumValue {
                    value: "created",
                    note: Some(
                        "Order created",
                    ),
                },
                EnumValue {
                    value: "pending",
                    note: None,
                },
                EnumValue {
                    value: "processing",
                    note: None,
                },
                EnumValue {
                    value: "completed",
                    note: None,
                },
            ],
        },
    ],
}